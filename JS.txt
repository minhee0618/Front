1. 변수 선언과 자료형

let : 값 변경 가능 (변수)              * let userName = "MH" *
const : 한번 정한 값 변경 불가 (상수)   * const PI = 3.14 *

    literal - 직접 써 넣은 코드의 값 자체

자료형
- string : 문자열 -> "" , '' , ``
- number : 숫자
- boolean : T / F
- null : 비어있음
- undefined : 아직 없음
- 객체 / 배열 / 함수

// typeof 연산자 - 자료형 확인  * typeof "hello" // string *


2. 입출력 도구

console.log()   // 콘솔에 출력
alert()         // 사용자에게 경고,정보 팝업창 출력

prompt()        // 사용자에게 입력 받기 (string)
confirm()       // 사용자에거 확인,취소 입력받기 (boolean)
 

3.연산자 (operators)

3.1 산술 연산자
  + (더하기), - (빼기), * (곱하기)
  / (나누기),  % (나머지), ** (거듭제곱)

    // 정수만 구하기 ( 소수점 이하 버리기 ) //
       Math.floor()                       * Math.floor( 5/2 );  // 2 *

3.2 증감 연산자
    ++ (1 증가)
    -- (1 감소)
   
    // ++a --a   -> 1 증가 그다음 실행
       b++ b--   -> 먼저 실행 그다음 1 증가

3.3 대입 연산자
    = (값 대입)
    += (더한 후 대입), -= (뺀 후 대입), *= (곱한 후 대입), /= (나눈 후 대입) %= (나머지 대입)

    * x += 5 -> x= x+5 *

3.4 비교 연산자  >> T/F 반환
    == (값이 같음), === (값,타입 같음), != (값 다름), !== (값이나 타입 다름)
    > (크다/작다), >= (크거나 같다)

3.5 논리 연산자  >> T/F 반환
    And && (논리곱) , OR || (논리합) , Not ! (논리부정)

3.6 문자열 연산자
    + 연산자로 문자열 연결 가능

    * alert("안녕하세요," + name + "님")*

3.7 삼항 연산자   >>  if ! else를 간단하게 사용하고 싶을때
  조건식 ? 참일 때 값 : 거짓일 때 값

    *console.log(score >= 80 ? "합격" : "불합격");*


4. 제어구조

4.1 조건문
    > if , else if , else , switch
    - if(조건) {}

    - if(조건) {}
        else { 조건이 만족하지 않는 경우 수행}   

    - if(조건) {}
        else if(조건) {}
            else {조건이 만족하지 않는 경우 수행}  /***마지막 else에는 조건 x
    
    - switch(값) {
        case 값1:
            // 값이 값1과 같을 때 실행
        break;
        case 값2:
            // 값이 값2와 같을 때 실행
        break;
        default:
            // 위의 값들과 모두 일치하지 않을 때 실행
    }
    *parseInt() -> 문자열을 정수형 숫자로 변환해주는 함수

4.2 반복문
    > for(정해진 횟수만큼 반복) , while(조건이 참이면 반복) , do ~ while(실행한뒤 반복 조건 확인)
    
    -for (초기값; 조건; 증감식) {
        // 조건이 참인 동안 반복 실행
    }
    
    -초기값;
     while(조건){
        // 조건이 참인 동안 반복 실행;
        //증감식;
     }

    -초기값;
     do{
        // 무조건 한 번 실행;
        // 다음 조건을 검사하여 반복 여부 결정 증감식;
     }while (조건);
    
4.3 흐름제어
    > break (반복문 종료) , continue(현재 반복 건너뛰고 다음 반복 진행)

    *for (let i = 0; i < 10; i++) {
     if (i === 5) {
        break;  // i가 5가 되면 반복문 종료
        }
      console.log(i);
    }  //0 1 2 3 4

    *for (let i = 1; i <= 5; i++) {
     if (i === 3) {
        continue;
     }
    console.log(i);
    }  //1 2 4 5

5. 배열
array는 여러 개의 값을 하나의 변수에 저장할 수 있는 자료형
각각의 값은 인덱스[index]로 구분되며, 0부터 시작
배열은 다양한 타입의 데이터를 혼합해서 저장 가능

    5.1 배열 선언 방법
    5.1.1.리터럴 방식
        let arr = [ 1, 2, 3];

    5.1.2. Array 생성자 방식
        let arr = new Array( 1, 2, 3 );

    5.1.3 빈 배열 만들기
        let arr = [];

Html/Css
https://special-rainstorm-825.notion.site/HTML-CSS-173c031ede41807181ccf2d167d03650
JavaScript
https://special-rainstorm-825.notion.site/80ea7d581089470fb9253da88dc7bdac